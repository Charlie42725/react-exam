{"ast":null,"code":"export const questions = [{\n  id: 1,\n  text: \"請解釋以下程式碼的輸出結果：\\n\\n```javascript\\nlet x = 10;\\nfunction test() {\\n  console.log(x);\\n  let x = 20;\\n}\\ntest();\\n```\",\n  imageUrl: null,\n  prompt: \"請分析這段 JavaScript 程式碼的執行結果，並解釋為什麼會產生這樣的輸出。\",\n  gptResponse: \"這段程式碼會產生 ReferenceError 錯誤。原因是在 test 函數中，我們使用了 let 宣告了變數 x，這會產生暫時性死區（Temporal Dead Zone, TDZ）。在 let 宣告之前，該變數是不可存取的，即使外部作用域有同名的變數。\",\n  reminder: \"注意 JavaScript 的變數提升（Hoisting）和暫時性死區（TDZ）的概念。\"\n}, {\n  id: 2,\n  text: \"請解釋以下 SQL 查詢的執行順序：\\n\\n```sql\\nSELECT department, COUNT(*) as employee_count\\nFROM employees\\nWHERE salary > 50000\\nGROUP BY department\\nHAVING COUNT(*) > 5\\nORDER BY employee_count DESC;\\n```\",\n  imageUrl: null,\n  prompt: \"請詳細說明這個 SQL 查詢的執行順序，並解釋每個子句的作用。\",\n  gptResponse: \"SQL 查詢的執行順序如下：\\n1. FROM：從 employees 表中獲取數據\\n2. WHERE：過濾 salary > 50000 的記錄\\n3. GROUP BY：按 department 分組\\n4. HAVING：過濾分組後 COUNT(*) > 5 的組\\n5. SELECT：選擇 department 和計算 COUNT(*)\\n6. ORDER BY：按 employee_count 降序排序\",\n  reminder: \"注意 SQL 查詢的執行順序與寫法順序不同，這對於理解查詢效能很重要。\"\n}];","map":{"version":3,"names":["questions","id","text","imageUrl","prompt","gptResponse","reminder"],"sources":["C:/Users/linei/Desktop/coding/exam/src/data/questions.js"],"sourcesContent":["export const questions = [\r\n  {\r\n    id: 1,\r\n    text: \"請解釋以下程式碼的輸出結果：\\n\\n```javascript\\nlet x = 10;\\nfunction test() {\\n  console.log(x);\\n  let x = 20;\\n}\\ntest();\\n```\",\r\n    imageUrl: null,\r\n    prompt: \"請分析這段 JavaScript 程式碼的執行結果，並解釋為什麼會產生這樣的輸出。\",\r\n    gptResponse: \"這段程式碼會產生 ReferenceError 錯誤。原因是在 test 函數中，我們使用了 let 宣告了變數 x，這會產生暫時性死區（Temporal Dead Zone, TDZ）。在 let 宣告之前，該變數是不可存取的，即使外部作用域有同名的變數。\",\r\n    reminder: \"注意 JavaScript 的變數提升（Hoisting）和暫時性死區（TDZ）的概念。\"\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"請解釋以下 SQL 查詢的執行順序：\\n\\n```sql\\nSELECT department, COUNT(*) as employee_count\\nFROM employees\\nWHERE salary > 50000\\nGROUP BY department\\nHAVING COUNT(*) > 5\\nORDER BY employee_count DESC;\\n```\",\r\n    imageUrl: null,\r\n    prompt: \"請詳細說明這個 SQL 查詢的執行順序，並解釋每個子句的作用。\",\r\n    gptResponse: \"SQL 查詢的執行順序如下：\\n1. FROM：從 employees 表中獲取數據\\n2. WHERE：過濾 salary > 50000 的記錄\\n3. GROUP BY：按 department 分組\\n4. HAVING：過濾分組後 COUNT(*) > 5 的組\\n5. SELECT：選擇 department 和計算 COUNT(*)\\n6. ORDER BY：按 employee_count 降序排序\",\r\n    reminder: \"注意 SQL 查詢的執行順序與寫法順序不同，這對於理解查詢效能很重要。\"\r\n  }\r\n]; "],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CACvB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,oHAAoH;EAC1HC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,2CAA2C;EACnDC,WAAW,EAAE,mIAAmI;EAChJC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iMAAiM;EACvMC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,iCAAiC;EACzCC,WAAW,EAAE,mNAAmN;EAChOC,QAAQ,EAAE;AACZ,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}