{"ast":null,"code":"export const questions = [{\n  id: 1,\n  text: \"請解釋以下程式碼的輸出結果：\\n\\n```javascript\\nlet x = 10;\\nfunction test() {\\n  console.log(x);\\n  let x = 20;\\n}\\ntest();\\n```\",\n  imageUrl: null,\n  prompt: \"請分析這段 JavaScript 程式碼的執行結果，並解釋為什麼會產生這樣的輸出。\",\n  gptResponse: \"這段程式碼會產生 ReferenceError 錯誤。原因是在 test 函數中，我們使用了 let 宣告了變數 x，這會產生暫時性死區（Temporal Dead Zone, TDZ）。在 let 宣告之前，該變數是不可存取的，即使外部作用域有同名的變數。\",\n  reminder: \"注意 JavaScript 的變數提升（Hoisting）和暫時性死區（TDZ）的概念。\"\n}, {\n  id: 2,\n  text: \"請解釋以下 SQL 查詢的執行順序：\\n\\n```sql\\nSELECT department, COUNT(*) as employee_count\\nFROM employees\\nWHERE salary > 50000\\nGROUP BY department\\nHAVING COUNT(*) > 5\\nORDER BY employee_count DESC;\\n```\",\n  imageUrl: null,\n  prompt: \"請詳細說明這個 SQL 查詢的執行順序，並解釋每個子句的作用。\",\n  gptResponse: \"SQL 查詢的執行順序如下：\\n1. FROM：從 employees 表中獲取數據\\n2. WHERE：過濾 salary > 50000 的記錄\\n3. GROUP BY：按 department 分組\\n4. HAVING：過濾分組後 COUNT(*) > 5 的組\\n5. SELECT：選擇 department 和計算 COUNT(*)\\n6. ORDER BY：按 employee_count 降序排序\",\n  reminder: \"注意 SQL 查詢的執行順序與寫法順序不同，這對於理解查詢效能很重要。\"\n}];\nexport const questionData = {\n  \"112\": [{\n    question: \"已知函數 f(x) = x^2 - 4x + 3，求 f(x) 的最小值。\",\n    steps: [\"將函數寫成完全平方形式：f(x) = (x^2 - 4x + 4) - 1\", \"化簡得：f(x) = (x - 2)^2 - 1\", \"因為 (x - 2)^2 ≥ 0，所以最小值為 -1\"],\n    explanation: \"這是一個二次函數求極值的問題。通過配方法將函數轉化為完全平方形式，可以很容易地看出函數的最小值。\"\n  }, {\n    question: \"解方程組：\\n2x + y = 5\\nx - y = 1\",\n    steps: [\"將兩個方程相加：3x = 6\", \"解得 x = 2\", \"將 x = 2 代入第二個方程：2 - y = 1\", \"解得 y = 1\"],\n    explanation: \"這是一個二元一次方程組，可以使用加減消元法來求解。\"\n  }],\n  \"111\": [{\n    question: \"已知三角形 ABC 中，AB = 5，BC = 12，AC = 13，求三角形 ABC 的面積。\",\n    steps: [\"檢查是否為直角三角形：5^2 + 12^2 = 13^2\", \"確認是直角三角形，直角在 B 點\", \"面積 = (5 × 12) ÷ 2 = 30\"],\n    explanation: \"這是一個利用畢氏定理判斷直角三角形並計算面積的問題。\"\n  }]\n};","map":{"version":3,"names":["questions","id","text","imageUrl","prompt","gptResponse","reminder","questionData","question","steps","explanation"],"sources":["C:/Users/linei/Desktop/coding/exam/src/data/questions.js"],"sourcesContent":["export const questions = [\r\n  {\r\n    id: 1,\r\n    text: \"請解釋以下程式碼的輸出結果：\\n\\n```javascript\\nlet x = 10;\\nfunction test() {\\n  console.log(x);\\n  let x = 20;\\n}\\ntest();\\n```\",\r\n    imageUrl: null,\r\n    prompt: \"請分析這段 JavaScript 程式碼的執行結果，並解釋為什麼會產生這樣的輸出。\",\r\n    gptResponse: \"這段程式碼會產生 ReferenceError 錯誤。原因是在 test 函數中，我們使用了 let 宣告了變數 x，這會產生暫時性死區（Temporal Dead Zone, TDZ）。在 let 宣告之前，該變數是不可存取的，即使外部作用域有同名的變數。\",\r\n    reminder: \"注意 JavaScript 的變數提升（Hoisting）和暫時性死區（TDZ）的概念。\"\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"請解釋以下 SQL 查詢的執行順序：\\n\\n```sql\\nSELECT department, COUNT(*) as employee_count\\nFROM employees\\nWHERE salary > 50000\\nGROUP BY department\\nHAVING COUNT(*) > 5\\nORDER BY employee_count DESC;\\n```\",\r\n    imageUrl: null,\r\n    prompt: \"請詳細說明這個 SQL 查詢的執行順序，並解釋每個子句的作用。\",\r\n    gptResponse: \"SQL 查詢的執行順序如下：\\n1. FROM：從 employees 表中獲取數據\\n2. WHERE：過濾 salary > 50000 的記錄\\n3. GROUP BY：按 department 分組\\n4. HAVING：過濾分組後 COUNT(*) > 5 的組\\n5. SELECT：選擇 department 和計算 COUNT(*)\\n6. ORDER BY：按 employee_count 降序排序\",\r\n    reminder: \"注意 SQL 查詢的執行順序與寫法順序不同，這對於理解查詢效能很重要。\"\r\n  }\r\n];\r\n\r\nexport const questionData = {\r\n  \"112\": [\r\n    {\r\n      question: \"已知函數 f(x) = x^2 - 4x + 3，求 f(x) 的最小值。\",\r\n      steps: [\r\n        \"將函數寫成完全平方形式：f(x) = (x^2 - 4x + 4) - 1\",\r\n        \"化簡得：f(x) = (x - 2)^2 - 1\",\r\n        \"因為 (x - 2)^2 ≥ 0，所以最小值為 -1\"\r\n      ],\r\n      explanation: \"這是一個二次函數求極值的問題。通過配方法將函數轉化為完全平方形式，可以很容易地看出函數的最小值。\"\r\n    },\r\n    {\r\n      question: \"解方程組：\\n2x + y = 5\\nx - y = 1\",\r\n      steps: [\r\n        \"將兩個方程相加：3x = 6\",\r\n        \"解得 x = 2\",\r\n        \"將 x = 2 代入第二個方程：2 - y = 1\",\r\n        \"解得 y = 1\"\r\n      ],\r\n      explanation: \"這是一個二元一次方程組，可以使用加減消元法來求解。\"\r\n    }\r\n  ],\r\n  \"111\": [\r\n    {\r\n      question: \"已知三角形 ABC 中，AB = 5，BC = 12，AC = 13，求三角形 ABC 的面積。\",\r\n      steps: [\r\n        \"檢查是否為直角三角形：5^2 + 12^2 = 13^2\",\r\n        \"確認是直角三角形，直角在 B 點\",\r\n        \"面積 = (5 × 12) ÷ 2 = 30\"\r\n      ],\r\n      explanation: \"這是一個利用畢氏定理判斷直角三角形並計算面積的問題。\"\r\n    }\r\n  ]\r\n}; "],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CACvB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,oHAAoH;EAC1HC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,2CAA2C;EACnDC,WAAW,EAAE,mIAAmI;EAChJC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iMAAiM;EACvMC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,iCAAiC;EACzCC,WAAW,EAAE,mNAAmN;EAChOC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,OAAO,MAAMC,YAAY,GAAG;EAC1B,KAAK,EAAE,CACL;IACEC,QAAQ,EAAE,uCAAuC;IACjDC,KAAK,EAAE,CACL,uCAAuC,EACvC,0BAA0B,EAC1B,4BAA4B,CAC7B;IACDC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,QAAQ,EAAE,8BAA8B;IACxCC,KAAK,EAAE,CACL,gBAAgB,EAChB,UAAU,EACV,2BAA2B,EAC3B,UAAU,CACX;IACDC,WAAW,EAAE;EACf,CAAC,CACF;EACD,KAAK,EAAE,CACL;IACEF,QAAQ,EAAE,kDAAkD;IAC5DC,KAAK,EAAE,CACL,8BAA8B,EAC9B,kBAAkB,EAClB,wBAAwB,CACzB;IACDC,WAAW,EAAE;EACf,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}